/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/members": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get members info
         * @description Returns a list of all members.
         */
        get: operations["members"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/posts": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get blog posts
         * @description Returns a paginated list of blog posts.
         */
        get: operations["posts"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: never;
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    members: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Response 200 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @description a string */
                        fullname: string;
                        /** @description a string */
                        bio: string;
                        /** @enum {string} */
                        color: "red" | "green" | "purple";
                        /** @description a string */
                        hometown: string | null;
                        /** @description a string */
                        telegram: string | null;
                        /** @description a string */
                        github: string | null;
                    }[];
                };
            };
        };
    };
    posts: {
        parameters: {
            query?: {
                /** @description a number between 1 and 100 */
                pageSize?: number;
                /** @description a number greater than or equal to 1 */
                pageNo?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Response 200 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @description a non-negative number */
                        total: number;
                        posts: {
                            /** @description a string */
                            title: string;
                            /** @description a string */
                            contentMd: string;
                            /** @description a string matching the pattern \d{4}-\d{2}-\d{2} */
                            date: string;
                            /** @description a string */
                            coverUrl: string | null;
                        }[];
                    };
                };
            };
        };
    };
}
